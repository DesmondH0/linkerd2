#!/bin/bash

set -eo pipefail

bindir=$( cd "${0%/*}" && pwd )

# shellcheck source=_kind.sh
. "$bindir"/_kind.sh

handle_input "$@"
cluster=${input_arg:-"kind"}

# shellcheck source=_tag.sh
. "$bindir"/_tag.sh
# shellcheck source=_docker.sh
. "$bindir"/_docker.sh

TAG=${TAG:-$(head_root_tag)}

# This is really to load the kind binary synchronously, before
# the parallel executions below attempt doing so
"$bindir"/kind version

rm -f load_fail
for img in proxy controller web grafana cli-bin debug cni-plugin ; do
  if [ $images ]; then
    if [ "$images_host" ]; then
      mkdir -p image-archives
      DOCKER_HOST=$images_host docker save "$DOCKER_REGISTRY/$img:$TAG" > image-archives/$img.tar
    fi
    cmd=(image-archive "image-archives/$img.tar")
  else
    cmd=(docker-image "$DOCKER_REGISTRY/$img:$TAG")
  fi

  "$bindir"/kind --name "$cluster" load "${cmd[@]}" || touch load_fail &
done

wait < <(jobs -p)
if [ -f load_fail ]; then
  echo "Loading docker images into KinD cluster failed."
  rm load_fail
  exit 1
fi
